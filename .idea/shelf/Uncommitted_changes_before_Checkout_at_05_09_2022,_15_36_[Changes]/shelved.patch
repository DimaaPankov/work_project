Index: app/src/main/java/com/test/luckydrum/Utils/Utils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.test.luckydrum.Utils\n\nimport com.test.luckydrum.view.CountDrum\nimport com.test.luckydrum.view.FirstFragment\n\nvar BET = CountDrum(15,FirstFragment.BLACK)\nvar BETsum = 50\n\n\n
===================================================================
diff --git a/app/src/main/java/com/test/luckydrum/Utils/Utils.kt b/app/src/main/java/com/test/luckydrum/Utils/Utils.kt
--- a/app/src/main/java/com/test/luckydrum/Utils/Utils.kt	
+++ b/app/src/main/java/com/test/luckydrum/Utils/Utils.kt	
@@ -1,9 +1,0 @@
-package com.test.luckydrum.Utils
-
-import com.test.luckydrum.view.CountDrum
-import com.test.luckydrum.view.FirstFragment
-
-var BET = CountDrum(15,FirstFragment.BLACK)
-var BETsum = 50
-
-
Index: app/src/main/java/com/test/luckydrum/view/FirstFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.test.luckydrum.view\n\nimport android.animation.ObjectAnimator\nimport android.annotation.SuppressLint\nimport android.app.Application\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport android.util.Log\n\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.navigation.fragment.findNavController\nimport com.test.luckydrum.MainActivity\nimport com.test.luckydrum.R\nimport com.test.luckydrum.Utils.BET\nimport com.test.luckydrum.Utils.BETsum\n\nimport com.test.luckydrum.databinding.FragmentFirstBinding\n\ndata class CountDrum(var i:Int,var color:Int)\n\n\nclass FirstFragment : Fragment() {\n    companion object {\n        val RED = 0\n        val BLACK = 1\n        val GREEN = 2\n    }\n    var rote = 0\n    var roteIndex = 0\n    var lastRote = 0\n    var indexList = 0\n\n    val binding by lazy { FragmentFirstBinding.inflate(layoutInflater) }\n    lateinit var animator1:ObjectAnimator\n\n\n  var indexRot = listOf(0,14,17,25,9,8,23,11,23,4,8,40,50,23,12,33,29,26, 11,33,1,20,21,20,14,27,35,\n      0,14,17,25,9,8,23,11,23,4,8,40,50,23,12,33,29,26,11,33,1,20,21,20,14,27,35)\n\n    val listCount = listOf(\n        CountDrum(12,RED),\n        CountDrum(19,RED),\n        CountDrum(4,BLACK),\n        CountDrum(31,BLACK),\n        CountDrum(2,BLACK),\n        CountDrum(31,BLACK),\n        CountDrum(11,BLACK),\n        CountDrum(22,BLACK),\n        CountDrum(8,BLACK),\n        CountDrum(25,RED),\n        CountDrum(9,RED),\n        CountDrum(23,RED),\n        CountDrum(14,RED),\n        CountDrum(36,RED),\n        CountDrum(14,RED),\n        CountDrum(29,BLACK),\n        CountDrum(2,BLACK),\n        CountDrum(31, BLACK),\n        CountDrum(15,BLACK),\n        CountDrum(25,RED),\n        CountDrum(4,BLACK),\n        CountDrum(26,RED),\n        CountDrum(18,RED),\n        CountDrum(20,BLACK),\n        CountDrum(7,RED),\n        CountDrum(27,RED),\n        CountDrum(13, BLACK),\n        CountDrum(27, RED),\n        CountDrum(10,BLACK),\n        CountDrum(5,RED),\n        CountDrum(4,BLACK),\n        CountDrum(16,RED),\n        CountDrum(4, BLACK),\n        CountDrum(29,BLACK),\n        CountDrum(2,BLACK),\n        CountDrum(28,BLACK),\n        CountDrum(1,RED),\n        CountDrum(21,RED),\n        CountDrum(12,RED),\n        CountDrum(19,RED),\n        CountDrum(4,BLACK),\n        CountDrum(31,BLACK),\n        CountDrum(2,BLACK),\n        CountDrum(31,BLACK),\n        CountDrum(11,BLACK),\n        CountDrum(22,BLACK),\n        CountDrum(8,BLACK),\n        CountDrum(25,RED),\n        CountDrum(9,RED),\n        CountDrum(23,RED),\n        CountDrum(14,RED),\n        CountDrum(36,RED),\n        CountDrum(14,RED),\n        CountDrum(29,BLACK),\n        CountDrum(2,BLACK),\n        CountDrum(31, BLACK),\n        CountDrum(15,BLACK),\n        CountDrum(25,RED),\n        CountDrum(4,BLACK),\n        CountDrum(26,RED),\n        CountDrum(18,RED),\n        CountDrum(20,BLACK),\n        CountDrum(7,RED),\n        CountDrum(27,RED),\n        CountDrum(13, BLACK),\n        CountDrum(27, RED),\n        CountDrum(10,BLACK),\n        CountDrum(5,RED),\n        CountDrum(4,BLACK),\n        CountDrum(16,RED),\n        CountDrum(4, BLACK),\n        CountDrum(29,BLACK),\n        CountDrum(2,BLACK),\n        CountDrum(28,BLACK),\n        CountDrum(1,RED),\n        CountDrum(21,RED),\n\n\n        )\n\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        MainActivity.goBack = {}\n\n        binding.TVinfo.setOnClickListener {\n            findNavController().navigate(FirstFragmentDirections.actionFirstFragmentToInfoFragment())\n        }\n\n        if(BET.color == RED){\n            binding.VbetColor.setBackgroundColor(resources.getColor(R.color.red))\n        }else{\n            binding.VbetColor.setBackgroundColor(resources.getColor(R.color.black))\n        }\n        binding.TVbetMain.text = BET.i.toString()\n\n\n        binding.Bbet.setOnClickListener{\n            findNavController().navigate(FirstFragmentDirections.actionFirstFragmentToBetFragment())\n        }\n\n            binding.bPlay.setOnClickListener{\n                Log.d(\"rrrrrrrrrrrrrr\",roteIndex.toString())\n                binding.TVbalans.text = ((binding.TVbalans.text.toString().toInt()) - BETsum).toString()\n                rote  = rote()\n                animationDrum()\n\n                Handler(Looper.getMainLooper()).postDelayed({\n\n                        if (BET.color == listCount[indexList].color) {\n                            binding.TVbalans.text = ((binding.TVbalans.text.toString()\n                                .toInt()) + (BETsum * 2)).toString()\n\n                    }else if(BET.i == listCount[indexList].color) {\n                            binding.TVbalans.text = ((binding.TVbalans.text.toString()\n                                .toInt()) + (BETsum * 2)).toString()\n                        }\n                    ++indexList\n                },3000)\n\n\n        }\n\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n\n        return binding.root\n\n    }\n//rrrr\n    private fun animationDrum(){\n        animator1 = ObjectAnimator.ofFloat(binding.imageView, View.ROTATION, rote().toFloat())\n        animator1.duration = 4000\n        animator1.start()\n    }\n\n    fun rote():Int {\n        //roteIndex = (0..35).random()\n        roteIndex = indexRot[indexList]\n        // lastRote+=1805+roteIndex*10\n        lastRote+=1805+indexRot[indexList]*10\n\n        return lastRote\n        // fun rote():Int {\n        //\n        //        return indexRot[indexList]\n        //    }\n    }\n\n}
===================================================================
diff --git a/app/src/main/java/com/test/luckydrum/view/FirstFragment.kt b/app/src/main/java/com/test/luckydrum/view/FirstFragment.kt
--- a/app/src/main/java/com/test/luckydrum/view/FirstFragment.kt	
+++ b/app/src/main/java/com/test/luckydrum/view/FirstFragment.kt	
@@ -1,199 +1,0 @@
-package com.test.luckydrum.view
-
-import android.animation.ObjectAnimator
-import android.annotation.SuppressLint
-import android.app.Application
-import android.os.Bundle
-import android.os.Handler
-import android.os.Looper
-import android.util.Log
-
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.navigation.fragment.findNavController
-import com.test.luckydrum.MainActivity
-import com.test.luckydrum.R
-import com.test.luckydrum.Utils.BET
-import com.test.luckydrum.Utils.BETsum
-
-import com.test.luckydrum.databinding.FragmentFirstBinding
-
-data class CountDrum(var i:Int,var color:Int)
-
-
-class FirstFragment : Fragment() {
-    companion object {
-        val RED = 0
-        val BLACK = 1
-        val GREEN = 2
-    }
-    var rote = 0
-    var roteIndex = 0
-    var lastRote = 0
-    var indexList = 0
-
-    val binding by lazy { FragmentFirstBinding.inflate(layoutInflater) }
-    lateinit var animator1:ObjectAnimator
-
-
-  var indexRot = listOf(0,14,17,25,9,8,23,11,23,4,8,40,50,23,12,33,29,26, 11,33,1,20,21,20,14,27,35,
-      0,14,17,25,9,8,23,11,23,4,8,40,50,23,12,33,29,26,11,33,1,20,21,20,14,27,35)
-
-    val listCount = listOf(
-        CountDrum(12,RED),
-        CountDrum(19,RED),
-        CountDrum(4,BLACK),
-        CountDrum(31,BLACK),
-        CountDrum(2,BLACK),
-        CountDrum(31,BLACK),
-        CountDrum(11,BLACK),
-        CountDrum(22,BLACK),
-        CountDrum(8,BLACK),
-        CountDrum(25,RED),
-        CountDrum(9,RED),
-        CountDrum(23,RED),
-        CountDrum(14,RED),
-        CountDrum(36,RED),
-        CountDrum(14,RED),
-        CountDrum(29,BLACK),
-        CountDrum(2,BLACK),
-        CountDrum(31, BLACK),
-        CountDrum(15,BLACK),
-        CountDrum(25,RED),
-        CountDrum(4,BLACK),
-        CountDrum(26,RED),
-        CountDrum(18,RED),
-        CountDrum(20,BLACK),
-        CountDrum(7,RED),
-        CountDrum(27,RED),
-        CountDrum(13, BLACK),
-        CountDrum(27, RED),
-        CountDrum(10,BLACK),
-        CountDrum(5,RED),
-        CountDrum(4,BLACK),
-        CountDrum(16,RED),
-        CountDrum(4, BLACK),
-        CountDrum(29,BLACK),
-        CountDrum(2,BLACK),
-        CountDrum(28,BLACK),
-        CountDrum(1,RED),
-        CountDrum(21,RED),
-        CountDrum(12,RED),
-        CountDrum(19,RED),
-        CountDrum(4,BLACK),
-        CountDrum(31,BLACK),
-        CountDrum(2,BLACK),
-        CountDrum(31,BLACK),
-        CountDrum(11,BLACK),
-        CountDrum(22,BLACK),
-        CountDrum(8,BLACK),
-        CountDrum(25,RED),
-        CountDrum(9,RED),
-        CountDrum(23,RED),
-        CountDrum(14,RED),
-        CountDrum(36,RED),
-        CountDrum(14,RED),
-        CountDrum(29,BLACK),
-        CountDrum(2,BLACK),
-        CountDrum(31, BLACK),
-        CountDrum(15,BLACK),
-        CountDrum(25,RED),
-        CountDrum(4,BLACK),
-        CountDrum(26,RED),
-        CountDrum(18,RED),
-        CountDrum(20,BLACK),
-        CountDrum(7,RED),
-        CountDrum(27,RED),
-        CountDrum(13, BLACK),
-        CountDrum(27, RED),
-        CountDrum(10,BLACK),
-        CountDrum(5,RED),
-        CountDrum(4,BLACK),
-        CountDrum(16,RED),
-        CountDrum(4, BLACK),
-        CountDrum(29,BLACK),
-        CountDrum(2,BLACK),
-        CountDrum(28,BLACK),
-        CountDrum(1,RED),
-        CountDrum(21,RED),
-
-
-        )
-
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-        MainActivity.goBack = {}
-
-        binding.TVinfo.setOnClickListener {
-            findNavController().navigate(FirstFragmentDirections.actionFirstFragmentToInfoFragment())
-        }
-
-        if(BET.color == RED){
-            binding.VbetColor.setBackgroundColor(resources.getColor(R.color.red))
-        }else{
-            binding.VbetColor.setBackgroundColor(resources.getColor(R.color.black))
-        }
-        binding.TVbetMain.text = BET.i.toString()
-
-
-        binding.Bbet.setOnClickListener{
-            findNavController().navigate(FirstFragmentDirections.actionFirstFragmentToBetFragment())
-        }
-
-            binding.bPlay.setOnClickListener{
-                Log.d("rrrrrrrrrrrrrr",roteIndex.toString())
-                binding.TVbalans.text = ((binding.TVbalans.text.toString().toInt()) - BETsum).toString()
-                rote  = rote()
-                animationDrum()
-
-                Handler(Looper.getMainLooper()).postDelayed({
-
-                        if (BET.color == listCount[indexList].color) {
-                            binding.TVbalans.text = ((binding.TVbalans.text.toString()
-                                .toInt()) + (BETsum * 2)).toString()
-
-                    }else if(BET.i == listCount[indexList].color) {
-                            binding.TVbalans.text = ((binding.TVbalans.text.toString()
-                                .toInt()) + (BETsum * 2)).toString()
-                        }
-                    ++indexList
-                },3000)
-
-
-        }
-
-    }
-
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-
-        return binding.root
-
-    }
-//rrrr
-    private fun animationDrum(){
-        animator1 = ObjectAnimator.ofFloat(binding.imageView, View.ROTATION, rote().toFloat())
-        animator1.duration = 4000
-        animator1.start()
-    }
-
-    fun rote():Int {
-        //roteIndex = (0..35).random()
-        roteIndex = indexRot[indexList]
-        // lastRote+=1805+roteIndex*10
-        lastRote+=1805+indexRot[indexList]*10
-
-        return lastRote
-        // fun rote():Int {
-        //
-        //        return indexRot[indexList]
-        //    }
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/test/luckydrum/view/InfoFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.test.luckydrum.view\n\nimport android.os.Bundle\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.navigation.fragment.findNavController\nimport com.test.luckydrum.R\nimport com.test.luckydrum.databinding.FragmentInfoBinding\n\n\nclass InfoFragment : Fragment() {\n\n   val binding by lazy { FragmentInfoBinding.inflate(layoutInflater) }\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n     binding.button.setOnClickListener {\n        findNavController().navigate(InfoFragmentDirections.actionInfoFragmentToFirstFragment())\n     }\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n\n        return binding.root\n    }\n\n\n}
===================================================================
diff --git a/app/src/main/java/com/test/luckydrum/view/InfoFragment.kt b/app/src/main/java/com/test/luckydrum/view/InfoFragment.kt
--- a/app/src/main/java/com/test/luckydrum/view/InfoFragment.kt	
+++ b/app/src/main/java/com/test/luckydrum/view/InfoFragment.kt	
@@ -1,32 +1,0 @@
-package com.test.luckydrum.view
-
-import android.os.Bundle
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.navigation.fragment.findNavController
-import com.test.luckydrum.R
-import com.test.luckydrum.databinding.FragmentInfoBinding
-
-
-class InfoFragment : Fragment() {
-
-   val binding by lazy { FragmentInfoBinding.inflate(layoutInflater) }
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-     binding.button.setOnClickListener {
-        findNavController().navigate(InfoFragmentDirections.actionInfoFragmentToFirstFragment())
-     }
-    }
-
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-
-        return binding.root
-    }
-
-
-}
\ No newline at end of file
Index: app/src/main/java/com/test/luckydrum/view/BetFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.test.luckydrum.view\n\nimport android.animation.ObjectAnimator\nimport android.os.Bundle\nimport android.os.Handler\nimport android.os.Looper\nimport androidx.fragment.app.Fragment\nimport android.view.LayoutInflater\nimport android.view.View\nimport android.view.ViewGroup\nimport androidx.navigation.fragment.findNavController\nimport com.test.luckydrum.MainActivity\nimport com.test.luckydrum.R\nimport com.test.luckydrum.Utils.BET\nimport com.test.luckydrum.databinding.FragmentBetBinding\nimport com.test.luckydrum.databinding.FragmentFirstBinding\nimport java.text.DecimalFormat\n\n\nclass BetFragment : Fragment() {\n\n    val binding by lazy{FragmentBetBinding.inflate(layoutInflater)}\n    var text = \"\"\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n\n\n        MainActivity.goBack = {\n            findNavController().navigate(BetFragmentDirections.actionBetFragmentToFirstFragment())\n        }\n\n        binding.mB0.setOnClickListener {\n            text +=\"0\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB1.setOnClickListener {\n            text +=\"1\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB2.setOnClickListener {\n            text +=\"2\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB3.setOnClickListener {\n            text +=\"3\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB4.setOnClickListener {\n            text +=\"4\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB5.setOnClickListener {\n            text +=\"5\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB6.setOnClickListener {\n            text +=\"6\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB7.setOnClickListener {\n            text +=\"7\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB8.setOnClickListener {\n            text +=\"8\"\n            binding.TVresult.text = \"${text}\"\n        }\n        binding.mB9.setOnClickListener {\n            text +=\"9\"\n            binding.TVresult.text = \"${text}\"\n        }\n\n        binding.mBresult.setOnClickListener {\n          BET.i = text.toInt()\n            findNavController().navigate(BetFragmentDirections.actionBetFragmentToFirstFragment())\n        }\n\n        binding.view1.setOnClickListener{\n            binding.viewBlack.visibility = View.VISIBLE\n            binding.viewRed.visibility = View.INVISIBLE\n            BET.color = FirstFragment.BLACK\n        }\n\n        binding.view2.setOnClickListener{\n            binding.viewBlack.visibility = View.INVISIBLE\n            binding.viewRed.visibility = View.VISIBLE\n            BET.color = FirstFragment.RED\n        }\n\n        binding.Bdelete.setOnClickListener{\n            text =\"\"\n            binding.TVresult.text = \"${text}\"\n\n\n        }\n\n    }\n\n    override fun onCreateView(\n        inflater: LayoutInflater, container: ViewGroup?,\n        savedInstanceState: Bundle?\n    ): View? {\n\n        return binding.root\n    }\n\n\n}
===================================================================
diff --git a/app/src/main/java/com/test/luckydrum/view/BetFragment.kt b/app/src/main/java/com/test/luckydrum/view/BetFragment.kt
--- a/app/src/main/java/com/test/luckydrum/view/BetFragment.kt	
+++ b/app/src/main/java/com/test/luckydrum/view/BetFragment.kt	
@@ -1,110 +1,0 @@
-package com.test.luckydrum.view
-
-import android.animation.ObjectAnimator
-import android.os.Bundle
-import android.os.Handler
-import android.os.Looper
-import androidx.fragment.app.Fragment
-import android.view.LayoutInflater
-import android.view.View
-import android.view.ViewGroup
-import androidx.navigation.fragment.findNavController
-import com.test.luckydrum.MainActivity
-import com.test.luckydrum.R
-import com.test.luckydrum.Utils.BET
-import com.test.luckydrum.databinding.FragmentBetBinding
-import com.test.luckydrum.databinding.FragmentFirstBinding
-import java.text.DecimalFormat
-
-
-class BetFragment : Fragment() {
-
-    val binding by lazy{FragmentBetBinding.inflate(layoutInflater)}
-    var text = ""
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-
-
-        MainActivity.goBack = {
-            findNavController().navigate(BetFragmentDirections.actionBetFragmentToFirstFragment())
-        }
-
-        binding.mB0.setOnClickListener {
-            text +="0"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB1.setOnClickListener {
-            text +="1"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB2.setOnClickListener {
-            text +="2"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB3.setOnClickListener {
-            text +="3"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB4.setOnClickListener {
-            text +="4"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB5.setOnClickListener {
-            text +="5"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB6.setOnClickListener {
-            text +="6"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB7.setOnClickListener {
-            text +="7"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB8.setOnClickListener {
-            text +="8"
-            binding.TVresult.text = "${text}"
-        }
-        binding.mB9.setOnClickListener {
-            text +="9"
-            binding.TVresult.text = "${text}"
-        }
-
-        binding.mBresult.setOnClickListener {
-          BET.i = text.toInt()
-            findNavController().navigate(BetFragmentDirections.actionBetFragmentToFirstFragment())
-        }
-
-        binding.view1.setOnClickListener{
-            binding.viewBlack.visibility = View.VISIBLE
-            binding.viewRed.visibility = View.INVISIBLE
-            BET.color = FirstFragment.BLACK
-        }
-
-        binding.view2.setOnClickListener{
-            binding.viewBlack.visibility = View.INVISIBLE
-            binding.viewRed.visibility = View.VISIBLE
-            BET.color = FirstFragment.RED
-        }
-
-        binding.Bdelete.setOnClickListener{
-            text =""
-            binding.TVresult.text = "${text}"
-
-
-        }
-
-    }
-
-    override fun onCreateView(
-        inflater: LayoutInflater, container: ViewGroup?,
-        savedInstanceState: Bundle?
-    ): View? {
-
-        return binding.root
-    }
-
-
-}
\ No newline at end of file
